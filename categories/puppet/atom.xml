<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: puppet | Sandors Systems Scribbles]]></title>
  <link href="http://e30chris.github.io/categories/puppet/atom.xml" rel="self"/>
  <link href="http://e30chris.github.io/"/>
  <updated>2014-09-05T12:30:23-07:00</updated>
  <id>http://e30chris.github.io/</id>
  <author>
    <name><![CDATA[chris]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Ansible to deploy a PuppetMaster]]></title>
    <link href="http://e30chris.github.io/using-ansible-to-deploy-a-puppetmaster/"/>
    <updated>2014-06-13T10:58:00-07:00</updated>
    <id>http://e30chris.github.io/using-ansible-to-deploy-a-puppetmaster</id>
    <content type="html"><![CDATA[<h2>The Problem</h2>

<p>Need to deploy a new Puppet Enterprise cluster with a PuppetMaster, PuppetConsole and a PuppetDB while avoiding typos and misconfigurations.  Also need to deploy to several environments using a consistent configuration.</p>

<h2>The Solution</h2>

<p>Use Ansible to deploy Puppet onto freshly built servers that contain just a SysAdmins SSH public key.</p>

<h2>The Goal</h2>

<p>A repeatable and documented way to deploy the very finicky Puppet installer in any environment needed from local vagrants to the clouds of vSphere, AWS, RackSpace or Digital Ocean.</p>

<h4>Note: this playbook is still a work in progress.  Most of the issues are fighting Puppets insane complexity of getting installed correctly with a few small Ansible bugs sprinkled in.</h4>

<!-- more -->


<hr />

<h2>GitHub Repo</h2>

<p><a href="https://github.com/e30chris/Ansible-PuppetEnterpriseDeploy">github.com/e30chris/Ansible-PuppetEnterpriseDeploy</a></p>

<hr />

<h2>Playbook notes</h2>

<h2>Setting the variables for each environment</h2>

<p>```
sandor@pineapplez:$ cd ~/Ansible-PuppetEnterpriseDeploy/</p>

<h2>sandor@pineapplez:$ cat group_vars/all</h2>

<h1>common variables for PuppetMaster Deployment</h1>

<h1>format for this file</h1>

<h1>variable: fact</h1>

<p>#</p>

<h1>version of Puppet Enterprise</h1>

<p>pe_version: 3.2.3</p>

<h1>os family</h1>

<p>os_family: debian
os_version: 7
os_arch: amd64</p>

<h1>pe installer</h1>

<p>pe_installer: puppet-enterprise-&ndash;&ndash;&ndash;</p>

<h1>hostnames</h1>

<p>pupmaster_hostname: pupmaster.argo.local
pupdb_hostname: pupdb.argo.local
pupconsole_hostname: pupconsole.argo.local</p>

<h1>IP&rsquo;s</h1>

<p>pupmaster_ip: 10.0.0.10
pupdb_ip: 10.0.0.11
pupconsole_ip: 10.0.0.12</p>

<h1>dns salt hostnames</h1>

<p>pupmaster_salt_hostnames: puppet,puppetmaster
pupdb_salt_hostnames: puppetdb
pupconsole_salt_hostname: pupconsole</p>

<h1>passwords</h1>

<p>console_auth_db_pass: arandompasswordthatneedschangedhere
console_db_pass: arandompasswordthatneedschangedhere
pupdb_db_pass: arandompasswordthatneedschangedhere
db_root_pass: arandompasswordthatneedschangedhere</p>

<p>```</p>

<p>To keep it simple only the values that should be changed are assigned variables.  Everything else is left with the Puppet defaults in the answer files.</p>

<hr />

<h2>Tasks to be run on all servers</h2>

<p>Puppet needs very perfect name resolution between all agents and the PuppetMaster.  Having a <strong>perfect</strong> hosts file on each server is required.</p>

<p>```
&ndash; name: Ensure common etc hosts file
  template:</p>

<pre><code>src="../templates/hosts.j2"
dest=/etc/hosts
</code></pre>

<p>```</p>

<p>To keep things simple all the installation tasks will run out of a /puppetinstall directory.  This should be in the user home dir that is running the installer.  The examples here use root but the SysAdmin Bible states never use root always use <strong>sudo</strong>.</p>

<p>```
&ndash; name: Ensure Puppet installer directory present
  file:</p>

<pre><code>path=/root/puppetinstall
state=directory
</code></pre>

<ul>
<li>name: Ensure install log present
file:
  path=/root/puppetinstall/pupconsole_install.log
  owner=root
  state=touch
```</li>
</ul>


<p>When you download the PE tarball you can grab the download url from S3.  This grabs the version you need and extracts it into the installer dir.</p>

<p>```
&ndash; name: Ensure PE tarball present
  get_url:</p>

<pre><code>url=https://s3.amazonaws.com/pe-builds/released//.tar.gz
dest=/root/peinstaller.tar.gz
force=no
</code></pre>

<ul>
<li>name: Ensure Puppet untar&rsquo;d to install directory
unarchive:
  copy=no
  src=/root/peinstaller.tar.gz
  dest=/root/puppetinstall</li>
</ul>


<h2>```</h2>

<h2>Tasks that run on each server role</h2>

<p>Each server then runs the same basic installer command with a few things named for each role like the installer log.</p>

<p>Here is the PuppetMasters install-</p>

<h2>```</h2>

<h1>Tasks for PupMaster</h1>

<ul>
<li><p>name: Ensure install log present
file:
  path=/root/puppetinstall/pupmaster_install.log
  owner=root
  state=touch</p></li>
<li><p>name: answer file for PupMaster
template:
  src=&ldquo;../templates/pupmaster.answer.j2&rdquo;
  dest=/root/puppetinstall/pupmaster.answer
  owner=root</p></li>
<li><p>name: run the pe installer
command: /root/puppetinstall//puppet-enterprise-installer -a /root/puppetinstall/pupmaster.answer -l /root/puppetinstall/pupmaster_install.log</p></li>
</ul>


<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[puppet vim setup]]></title>
    <link href="http://e30chris.github.io/puppet-vim-setup/"/>
    <updated>2013-11-12T21:04:00-08:00</updated>
    <id>http://e30chris.github.io/puppet-vim-setup</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<p>Setup vim to edit Puppet Manifests using a few good tools that will get you to pass Puppet Lint tests.</p>

<!-- more -->


<h2>The Links</h2>

<ul>
<li><p>PuppetLabs &ndash; <a href="http://puppetlabs.com/">link</a></p></li>
<li><p>vim-puppet &ndash; <a href="https://github.com/rodjek/vim-puppet">link</a></p></li>
<li><p>vim tabular &ndash; <a href="https://github.com/godlygeek/tabular">link</a></p></li>
<li><p>vim syntastic &ndash; <a href="https://github.com/scrooloose/syntastic">link</a></p></li>
</ul>


<h2>Vim-Pathogen</h2>

<p>Vim-Pathogen on <a href="https://github.com/tpope/vim-pathogen" title="vim-pathogen">github</a></p>

<p><code>
[root@Argon ~]# mkdir -p ~/.vim/autoload ~/.vim/bundle
[root@Argon ~]# cd ~/.vim/autoload
[root@Argon ~]# curl -o pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
</code>
Add these settings to .vimrc</p>

<p><code>
execute pathogen#infect()
syntax on
filetype plugin indent on
</code></p>

<h2>Vim-Puppet</h2>

<p>Vim-Puppet on <a href="https://github.com/rodjek/vim-puppet" title="vim-puppet">github</a></p>

<p><code>
[root@Argon ~]# cd ~/.vim/bundle
[root@Argon ~]# git clone git://github.com/rodjek/vim-puppet.git
</code></p>

<h2>Tabular</h2>

<p>Tabular on <a href="https://github.com/godlygeek/tabular" title="tabular">github</a></p>

<p><code>
[root@Argon ~]# cd ~/.vim/bundle
[root@Argon ~]# git clone git://github.com/godlygeek/tabular.git
</code></p>

<h2>Syntastic</h2>

<p>Syntastic on <a href="https://github.com/scrooloose/syntastic" title="syntastic">github</a></p>

<p><code>
[root@Argon ~]# cd ~/.vim/bundle
[root@Argon ~]# git clone https://github.com/scrooloose/syntastic.git
</code></p>
]]></content>
  </entry>
  
</feed>
