<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sandors Systems Scribbles]]></title>
  <link href="http://e30chris.github.io/atom.xml" rel="self"/>
  <link href="http://e30chris.github.io/"/>
  <updated>2014-06-16T13:56:57-07:00</updated>
  <id>http://e30chris.github.io/</id>
  <author>
    <name><![CDATA[chris]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Ansible]]></title>
    <link href="http://e30chris.github.io/installing-ansible/"/>
    <updated>2014-06-16T13:15:00-07:00</updated>
    <id>http://e30chris.github.io/installing-ansible</id>
    <content type="html"><![CDATA[<h2>The Problem</h2>

<p>Need to deploy an Ansible Controller to run Playbooks from that uses the latest build and is easy to upgrade/configure.</p>

<h2>The Solution</h2>

<p>Install Ansible from the latest release on GitHub.</p>

<h2>The Goal</h2>

<p>Create an Ansible Controller directory that will run the latest version via git clone and setup the shell with the Ansible environment scripts.</p>

<!-- more -->


<hr />

<h2>Clone the Ansible repo</h2>

<p>Go to the GitHub project page <a href="https://github.com/ansible/ansible">github/ansible</a></p>

<p>Choose a release version or the dev branch and clone.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineapplez:$ mkdir ~/Codestuff/AnsibleController &lt;-- Ansible runs from here
</span><span class='line'>sandor@pineapplez:$ mkdir ~/Codestuff/ansibles &lt;-- Playbooks go here
</span><span class='line'>sandor@pineapplez:$ cd ~/Codestuff/AnsibleController
</span><span class='line'>sandor@pineapplez:$ git@github.com:ansible/ansible.git</span></code></pre></td></tr></table></div></figure>


<h2>Run the environment script</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineapplez:$ ./hacking/env-setup</span></code></pre></td></tr></table></div></figure>


<p>To upgrade Ansible just go back into the AnsibleController directory and use git to get the latest.</p>

<p>You are now setup to run Ansible from the Controller.  Push some SSH public keys and start pushing playbooks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Ansible to deploy a PuppetMaster]]></title>
    <link href="http://e30chris.github.io/using-ansible-to-deploy-a-puppetmaster/"/>
    <updated>2014-06-13T10:58:00-07:00</updated>
    <id>http://e30chris.github.io/using-ansible-to-deploy-a-puppetmaster</id>
    <content type="html"><![CDATA[<h2>The Problem</h2>

<p>Need to deploy a new Puppet Enterprise cluster with a PuppetMaster, PuppetConsole and a PuppetDB while avoiding typos and misconfigurations.  Also need to deploy to several environments using a consistent configuration.</p>

<h2>The Solution</h2>

<p>Use Ansible to deploy Puppet onto freshly built servers that contain just a SysAdmins SSH public key.</p>

<h2>The Goal</h2>

<p>A repeatable and documented way to deploy the very finicky Puppet installer in any environment needed from local vagrants to the clouds of vSphere, AWS, RackSpace or Digital Ocean.</p>

<!-- more -->


<hr />

<h2>GitHub Repo</h2>

<p><a href="https://github.com/e30chris/Ansible-PuppetEnterpriseDeploy">github.com/e30chris/Ansible-PuppetEnterpriseDeploy</a></p>

<hr />

<h2>Playbook notes</h2>

<h2>Setting the variables for each environment</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineapplez:$ cd ~/Ansible-PuppetEnterpriseDeploy/
</span><span class='line'>sandor@pineapplez:$ cat group_vars/all
</span><span class='line'>---
</span><span class='line'># common variables for PuppetMaster Deployment
</span><span class='line'># format for this file
</span><span class='line'># variable: fact
</span><span class='line'>#
</span><span class='line'># version of Puppet Enterprise
</span><span class='line'>pe_version: 3.2.3
</span><span class='line'>
</span><span class='line'># os family
</span><span class='line'>os_family: debian
</span><span class='line'>os_version: 7
</span><span class='line'>os_arch: amd64
</span><span class='line'>
</span><span class='line'># pe installer
</span><span class='line'>pe_installer: puppet-enterprise-""-""-""-""
</span><span class='line'>
</span><span class='line'># hostnames
</span><span class='line'>pupmaster_hostname: pupmaster.local
</span><span class='line'>pupdb_hostname: pupdb.local
</span><span class='line'>pupconsole_hostname: pupconsole.local
</span><span class='line'>
</span><span class='line'># IP's
</span><span class='line'>pupmaster_ip: 10.0.0.10
</span><span class='line'>pupdb_ip: 10.0.0.11
</span><span class='line'>pupconsole_ip: 10.0.0.12
</span><span class='line'>
</span><span class='line'># dns salt hostnames
</span><span class='line'>pupmaster_salt_hostnames: puppet,puppetmaster
</span><span class='line'>pupdb_salt_hostnames: puppetdb
</span><span class='line'>pupconsole_salt_hostname: pupconsole
</span><span class='line'>
</span><span class='line'># passwords
</span><span class='line'>console_auth_db_pass: arandompasswordthatneedschangedhere
</span><span class='line'>console_db_pass: arandompasswordthatneedschangedhere
</span><span class='line'>pupdb_db_pass: arandompasswordthatneedschangedhere
</span><span class='line'>db_root_pass: arandompasswordthatneedschangedhere
</span></code></pre></td></tr></table></div></figure>


<p>To keep it simple only the values that should be changed are assigned variables.  Everything else is left with the Puppet defaults in the answer files.</p>

<hr />

<h2>Tasks to be run on all servers</h2>

<p>Puppet needs very perfect name resolution between all agents and the PuppetMaster.  Having a <strong>perfect</strong> hosts file on each server is required.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: Ensure common etc hosts file
</span><span class='line'>  template:
</span><span class='line'>    src="../templates/hosts.j2"
</span><span class='line'>    dest=/etc/hosts</span></code></pre></td></tr></table></div></figure>


<p>To keep things simple all the installation tasks will run out of a /puppetinstall directory.  This should be in the user home dir that is running the installer.  The examples here use root but the SysAdmin Bible states never use root always use <strong>sudo</strong>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: Ensure Puppet installer directory present
</span><span class='line'>  file:
</span><span class='line'>    path=/root/puppetinstall
</span><span class='line'>    state=directory
</span><span class='line'>
</span><span class='line'>- name: Ensure install log present
</span><span class='line'>  file:
</span><span class='line'>    path=/root/puppetinstall/pupconsole_install.log
</span><span class='line'>    owner=root
</span><span class='line'>    state=touch</span></code></pre></td></tr></table></div></figure>


<p>When you download the PE tarball you can grab the download url from S3.  This grabs the version you need and extracts it into the installer dir.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: Ensure PE tarball present
</span><span class='line'>  get_url:
</span><span class='line'>    url=https://s3.amazonaws.com/pe-builds/released/""/"".tar.gz
</span><span class='line'>    dest=/root/"".tar.gz
</span><span class='line'>    force=no
</span><span class='line'>
</span><span class='line'>- name: Ensure Puppet untar'd to install directory
</span><span class='line'>  unarchive: 
</span><span class='line'>    copy=no
</span><span class='line'>    src=/root/"".tar.gz
</span><span class='line'>    dest=/root/puppetinstall</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Tasks that run on each server role</h2>

<p>Each server then runs the same basic installer command with a few things named for each role like the installer log.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: answer file for PupMaster
</span><span class='line'>  template:
</span><span class='line'>    src="../templates/pupmaster.answer.j2"
</span><span class='line'>    dest=/root/puppetinstall/""/answers/pupmaster.answer
</span><span class='line'>
</span><span class='line'>- name: run the pe installer
</span><span class='line'>  command: /root/puppetinstall/""/puppet-enterprise-installer -a /root/puppetinstall/""/answers/pupmaster.answer | tee /root/puppetinstall/pupmaster_install.log
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using GoAccess to parse webserver logs]]></title>
    <link href="http://e30chris.github.io/using-goaccess-to-parse-webserver-logs/"/>
    <updated>2014-04-01T23:54:00-07:00</updated>
    <id>http://e30chris.github.io/using-goaccess-to-parse-webserver-logs</id>
    <content type="html"><![CDATA[<h1>The Problem</h1>

<p>Need the ability to track web traffic for a specific hours worth of logs.</p>

<h1>The Solution</h1>

<p>Using GoAccess to parse Apache logs that are rotated into hour chunks.</p>

<h1>The Goal</h1>

<p>Install GoAccess to parse webserver logs.  Use Ansible Playbooks for the installation, configuration and for re-usabilty of GoAccess on other servers.  Keep it simple by rotating logs on the hour.</p>

<!-- more -->


<h1>The Links</h1>

<ul>
<li>GoAccess &ndash; <a href="https://github.com/allinurl/goaccess/">real-time web log analyzer &ndash; allinurl/goaccess</a></li>
<li>Ansible &ndash; <a href="http://docs.ansible.com/">Ansible Docs</a></li>
<li>Apache rotatelogs &ndash; <a href="https://httpd.apache.org/docs/2.2/programs/rotatelogs.html">Hourly Rotated WebServer Logs</a></li>
<li>Digital Ocean &ndash; <a href="https://www.digitalocean.com/?refcode=980586449ebd">My referral link, thanks!</a></li>
<li>TugBoat &ndash; <a href="https://github.com/pearkes/tugboat">CLI for DO &ndash; pearkes/tugboat</a></li>
</ul>


<h1>Ansible Playbook &ndash; Install GoAccess</h1>

<p>Create the GoAccess Playbook.  This installs GoAccess using Apt on Debian.</p>

<script src="https://gist.github.com/e30chris/9929303.js"></script>


<p>Run the playbook with Ansible.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineapplez:$ ansible-playbook ~/playbooks/goaccess/goaccess.yml -vvvv</span></code></pre></td></tr></table></div></figure>


<h1>GoAccess Usage</h1>

<p>Now that GoAccess is installed on the server we can login and parse the webserver logs.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@argo:/var/log/apache2$ goaccess -f apache2.log</span></code></pre></td></tr></table></div></figure>


<p>GoAccess now parses the log and outputs the results in a configurable format.  You can also export the results into various file formats.</p>

<p>Here is a screenshot that shows how many times an IP has hit the webserver.</p>

<p><img src="https://s3.amazonaws.com/sandorssystemsscribbles/GoAccessScreen.png"></p>

<p>To keep it simple install Apache rotatelog and set the logs to rollover on the hour.  Then GoAccess can parse the logs by the hour.</p>

<p>Apache rotatelog setting for hourly logs:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CustomLog "|bin/rotatelogs -l /var/log/apache2.%Y-%m-%d-%H 3600" common </span></code></pre></td></tr></table></div></figure>


<p>Parsing a specific hours logs with GoAccess</p>

<p>Example &ndash; Logs for 8am April, 2 2014.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@argo:/var/log/apache2$ goaccess -f apache2.2014-04-02-08</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dogecoin mining on Digital Ocean]]></title>
    <link href="http://e30chris.github.io/dogecoin-mining-on-digital-ocean/"/>
    <updated>2014-03-12T15:41:00-07:00</updated>
    <id>http://e30chris.github.io/dogecoin-mining-on-digital-ocean</id>
    <content type="html"><![CDATA[<h1>The Goal</h1>

<p>Create a droplet on Digital Ocean to mine Dogecoins so fun much profits.</p>

<p><img src="https://dl.dropboxusercontent.com/u/6735750/dogecoinsuchlogo.png"></p>

<!-- more -->


<h1>The Links</h1>

<ul>
<li>Dogecoin &ndash; <a href="http://dogecoin.com/">very link</a></li>
<li>/r/dogecoin &ndash; <a href="http://www.reddit.com/r/dogecoin">so reddit</a></li>
<li>/r/dogemining &ndash; <a href="http://www.reddit.com/r/dogemining">many mines</a></li>
<li>Dogecoin Mining Pools &ndash; <a href="http://www.doktorrf.com/dogecoin/pools.html">much swim</a></li>
<li>Dogecoin Resources &ndash; <a href="https://github.com/ummjackson/dogecoin-resources">sources</a></li>
<li>Dogecoin Foundation &ndash; <a href="http://foundation.dogecoin.com/">now found</a></li>
<li>Digital Ocean &ndash; <a href="https://www.digitalocean.com">awesome drops</a></li>
<li>TugBoat &ndash; <a href="https://www.digitalocean.com/community/articles/how-to-use-tugboat-to-manage-digitalocean-droplets-from-a-terminal">command line ocean</a></li>
</ul>


<h1>Create a droplet</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@argo&gt; tugboat create lucydoge -s 62 -i 308287 -r 3 -k 44888</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Name:             lucydoge
</span><span class='line'>Status:           active
</span><span class='line'>Region ID:        3
</span><span class='line'>Image ID:         308287
</span><span class='line'>Size ID:          62
</span><span class='line'>Backups Active:   false
</span></code></pre></td></tr></table></div></figure>


<h2>Create user</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@lucydoge:~# history
</span><span class='line'>root@lucydoge:~# ls -al
</span><span class='line'>root@lucydoge:~# useradd -m lucy
</span><span class='line'>root@lucydoge:~# passwd lucy
</span><span class='line'>root@lucydoge:~# adduser lucy sudo</span></code></pre></td></tr></table></div></figure>


<h2>Update Debian</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@lucydoge:~# apt-get -y update && apt-get -y upgrade</span></code></pre></td></tr></table></div></figure>


<h2>Install Screen</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@lucydoge:~# apt-get install screen</span></code></pre></td></tr></table></div></figure>


<h1>Install a CPU Miner</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@lucydoge:~# sudo apt-get install git build-essential autotools-dev libcurl4-gnutls-dev autoconf automake</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lucy@lucydoge:~# mkdir ~/miner2049er</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lucy@lucydoge:~# cd miner2049er
</span><span class='line'>lucy@lucydoge:~# git clone https://github.com/pooler/cpuminer.git
</span><span class='line'>lucy@lucydoge:~# cd cpuminer 
</span><span class='line'>lucy@lucydoge:~# ./autogen.sh 
</span><span class='line'>lucy@lucydoge:~# CFLAGS="-O3 -Wall -msse2" ./configure
</span><span class='line'>lucy@lucydoge:~# make</span></code></pre></td></tr></table></div></figure>


<h1>Find a Mining Pool</h1>

<p><a href="http://www.doktorrf.com/dogecoin/pools.html">Mining Pools</a></p>

<ul>
<li>Create a new address for mining deposits</li>
<li>Add that mining address to your pool profile</li>
</ul>


<h1>Start mining</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lucy@lucydoge:~# ./minerd --url stratum+tcp://server:port --userpass worker.name:password</span></code></pre></td></tr></table></div></figure>


<p>enjoy much coins</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Oscar to Build a Local Puppet Environment with Vagrant]]></title>
    <link href="http://e30chris.github.io/using-oscar-to-build-a-local-puppet-environment-with-vagrant/"/>
    <updated>2013-12-20T11:22:00-08:00</updated>
    <id>http://e30chris.github.io/using-oscar-to-build-a-local-puppet-environment-with-vagrant</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Install Oscar</li>
<li>Use Oscar to build a local PuppetMaster &amp; Agent config</li>
<li>Use Vagrant to start the PuppetMaster &amp; Agent</li>
</ul>


<!-- more -->


<h2>Install</h2>

<ul>
<li>VirtualBox &ndash; <a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></li>
<li>Vagrant &ndash; Oscar works with Vagrant version 1.3.4 &ndash; <a href="http://downloads.vagrantup.com/tags/v1.3.4">http://downloads.vagrantup.com/tags/v1.3.4</a></li>
<li>Oscar &ndash; <a href="https://github.com/adrienthebo/oscar">https://github.com/adrienthebo/oscar</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant plugin install oscar</span></code></pre></td></tr></table></div></figure>


<h2>Add a Vagrant Box</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant box add centosPupLabs http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box</span></code></pre></td></tr></table></div></figure>


<p>What that does:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant box add boxName http://url.box</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Downloads the .box file to the Vagrant boxes directory</li>
<li>nocm = No &ldquo;configuration management&rdquo; installed</li>
</ul>


<h2>Create a Vagrant environment with Oscar</h2>

<p>Give Vagrant a Puppet Enterprise installer location &amp; version.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vim config/pe_build.yaml
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'> pe_build:
</span><span class='line'>   version: "3.1.3"
</span><span class='line'>   #download_root: 'http://s3.amazonpebucket.com'
</span></code></pre></td></tr></table></div></figure>


<p>Set the download_root or manually add the installer with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant pe-build copy puppet-enterprise-3.1.3-el-6-x86_64.tar.gz</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant oscar init</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant oscar init-vms \
</span><span class='line'>                   --master master=centosPupLabs \
</span><span class='line'>                   --agent firstagent=centosPupLabs 
</span><span class='line'>                   --agent secondagent=centosPupLabs</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant up</span></code></pre></td></tr></table></div></figure>


<p>What that does:</p>

<ul>
<li>Creates a Vagrantfile that is customized by Oscar</li>
<li>Adds a PuppetMaster and 2 agents to the Vagrant environment</li>
<li>Uses the PuppetLabs Centos box as the OS for all 3 VMsgs</li>
<li>Starts the group of VMs</li>
</ul>


<h2>Login to the VMs</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineApplez&gt; vagrant ssh master
</span><span class='line'>sandor@pineApplez&gt; vagrant ssh firstagent
</span><span class='line'>sandor@pineApplez&gt; vagrant ssh secondagent</span></code></pre></td></tr></table></div></figure>


<h2>The result</h2>

<ul>
<li>3 running VMs with a PuppetMaster and 2 agents</li>
<li>Both Agents are authenticated with the Master</li>
<li>You can now run your Puppet code</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Vagrant on Windows]]></title>
    <link href="http://e30chris.github.io/using-vagrant-on-windows/"/>
    <updated>2013-12-17T12:10:00-08:00</updated>
    <id>http://e30chris.github.io/using-vagrant-on-windows</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Install and configure VirtualBox &amp; Vagrant on your Windows dev box</li>
<li>Download and start a Linux &amp; Windows Vagrant Box.</li>
</ul>


<!-- more -->


<h2>Install</h2>

<ul>
<li>VirtualBox &ndash; <a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></li>
<li>Vagrant &ndash; <a href="http://www.vagrantup.com/downloads">http://www.vagrantup.com/downloads</a>

<ul>
<li>Download the .msi</li>
<li>Right click and <code>Install as Administrator</code></li>
</ul>
</li>
</ul>


<h2>Add a Vagrant Box</h2>

<ul>
<li>Open a Command Prompt and <code>Run as Administrator</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Windows\system32\&gt;vagrant box add centosPupLabs http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box</span></code></pre></td></tr></table></div></figure>


<p>What that does:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Windows\system32\&gt;vagrant box add boxName http://url.box</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Downloads the .box file to the Vagrant boxes directory</li>
<li>nocm = No &ldquo;configuration management&rdquo; installed</li>
<li>We will use a Vagrant plugin called Oscar to install and configure the PuppetMaster and Agent in a separate post.</li>
</ul>


<h2>Start the Vagrant Box</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\stuff\vagrants\&gt;vagrant init centosPupLabs</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\stuff\vagrants\&gt;vagrant up</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\stuff\vagrants\&gt;vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>What that does:</p>

<ul>
<li>Tells Vagrant to write a VagrantConfig file in <code>C:\stuff\vagrants\</code></li>
<li>Vagrant then boots the centosPupLabs VirtualBox machine</li>
<li>SSH into the VM

<ul>
<li>Must have Cygwin or Git installed</li>
<li>You can also use PuTTY</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPN Setup - MacBook to OpenVPN Server using Tunnelblick]]></title>
    <link href="http://e30chris.github.io/vpn-setup-macbook-to-openvpn-server-using-tunnelblick/"/>
    <updated>2013-12-10T16:13:00-08:00</updated>
    <id>http://e30chris.github.io/vpn-setup-macbook-to-openvpn-server-using-tunnelblick</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Get MacBook to connect to a OpenVPN Server</li>
<li>Install Tunnelblick to make that happen</li>
</ul>


<!-- more -->


<h2>Setup the OpenVPN Server</h2>

<ul>
<li>Follow this &ndash; <a href="http://sandorsscribbl.es/vpn-setup-openvpn-server-deploy-on-aws/">sandorsscribbl.es/vpn-setup-openvpn-server-deploy-on-aws</a></li>
</ul>


<h2>Install Tunnelblick</h2>

<p><a href="https://code.google.com/p/tunnelblick/">Tunnelblick Google Code</a></p>

<h2>Download OpenVPN Client Config file</h2>

<ul>
<li>Goto OpenVPN web client</li>
<li>Login with new user</li>
<li>Choose to download cert</li>
</ul>


<h2>Modify Client Config File for Tunnelblick</h2>

<ul>
<li>Create a folder for the new config / VPN connection</li>
<li>The $vpnname.tblk folder is where that VPN connection is saved</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineAplez&gt; mkdir -p ~/Library/Application\ Support/Tunnelblick/Configurations/argovoyage.tblk/Contents/Resources/</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Copy the .ovpn client config file to that directory</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sandor@pineAplez&gt; cp ~/Downloads/client.ovpn ~/Library/Application\ Support/Tunnelblick/Configurations/argovoyage.tblk/Contents/Resources/.</span></code></pre></td></tr></table></div></figure>


<h2>Start Tunnelblick</h2>

<ul>
<li>Choose VPN from the tunnel</li>
</ul>


<h2>The Test</h2>

<ul>
<li>Verify IP using Tunnelblick</li>
<li>Verify IP with Tunnelblick off</li>
<li><a href="http://ipchicken.com/">IP Chicken</a></li>
</ul>


<h2>The Result</h2>

<ul>
<li>Using a VPN your nets are safe from all prying eyes except the NSAs</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPN Setup - OpenVPN Server Deploy on AWS]]></title>
    <link href="http://e30chris.github.io/vpn-setup-openvpn-server-deploy-on-aws/"/>
    <updated>2013-12-10T15:36:00-08:00</updated>
    <id>http://e30chris.github.io/vpn-setup-openvpn-server-deploy-on-aws</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Deploy an OpenVPN Server on AWS</li>
</ul>


<!-- more -->


<h2>Launch the OpenVPN Access Server AMI</h2>

<ul>
<li>Set AMI to VPC network</li>
<li>Auto Assign Public Static IP</li>
</ul>


<h3>AMI ids</h3>

<table>
<thead>
<tr>
<th></th>
<th align="left"> AMI Location       </th>
<th align="left"> ami id         </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">US East (Virginia)</td>
<td align="left"> ami-ff6b3096</td>
</tr>
<tr>
<td></td>
<td align="left">US West (Oregon)</td>
<td align="left"> ami-c8039bf8</td>
</tr>
<tr>
<td></td>
<td align="left">US West (N California)</td>
<td align="left"> ami-6c0b3d29</td>
</tr>
<tr>
<td></td>
<td align="left">EU West (Ireland)</td>
<td align="left"> ami-89d83afe</td>
</tr>
<tr>
<td></td>
<td align="left">Asia Pacific (Singapore)</td>
<td align="left"> ami-3c9bce6e</td>
</tr>
<tr>
<td></td>
<td align="left">Asia Pacific (Tokyo)</td>
<td align="left"> ami-172d4916</td>
</tr>
<tr>
<td></td>
<td align="left">Asia Pacific (Sydney)</td>
<td align="left"> ami-db73efe1</td>
</tr>
<tr>
<td></td>
<td align="left">South America (Sao Paulo)</td>
<td align="left"> ami-6d4ee870 </td>
</tr>
</tbody>
</table>


<h3>Set user-data</h3>

<table>
<thead>
<tr>
<th></th>
<th align="left">Key</th>
<th align="left">Value         </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">public_hostname    </td>
<td align="left">hostname that clients should use to contact the server</td>
</tr>
<tr>
<td></td>
<td align="left">admin_user (default=openvpn)    </td>
<td align="left">Access Server administrative account name</td>
</tr>
<tr>
<td></td>
<td align="left">license     </td>
<td align="left">Access Server license key <em>without a license key only 2 connections allowed</em></td>
</tr>
<tr>
<td></td>
<td align="left">reroute_gw default=0 </td>
<td align="left">if 1, clients will route internet traffic through the VPN</td>
</tr>
<tr>
<td></td>
<td align="left">reroute_dns default=0 </td>
<td align="left"> if 1, clients will route DNS queries through the VPN</td>
</tr>
</tbody>
</table>


<h3>Set New Security Group</h3>

<table>
<thead>
<tr>
<th></th>
<th align="left">  Protocol    </th>
<th align="left">  Type    </th>
<th align="left">  Port    </th>
<th align="left">  Source     </th>
<th align="left">  Role</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">SSH    </td>
<td align="left">TCP    </td>
<td align="left">22    </td>
<td align="left">Anywhere 0.0.0.0/0</td>
<td align="left"> Linux Access</td>
</tr>
<tr>
<td></td>
<td align="left">HTTPS    </td>
<td align="left">TCP    </td>
<td align="left">443    </td>
<td align="left">Anywhere 0.0.0.0/0</td>
<td align="left"> OpenVPN Client Web Server</td>
</tr>
<tr>
<td></td>
<td align="left">Custom TCP Rule     </td>
<td align="left">TCP     </td>
<td align="left">943    </td>
<td align="left">Anywhere 0.0.0.0/0</td>
<td align="left"> OpenVPN Web UI</td>
</tr>
<tr>
<td></td>
<td align="left">Custom UDP Rule     </td>
<td align="left">UDP    </td>
<td align="left">1194    </td>
<td align="left">Anywhere 0.0.0.0/0</td>
<td align="left"> Initiate UDP based VPN sessions</td>
</tr>
</tbody>
</table>


<h2>Configure OpenVPN Server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ovpn-init</span></code></pre></td></tr></table></div></figure>


<h2>Access Client Website</h2>

<p><a href="https://">https://</a>&ldquo;aws public ip&rdquo;:943/admin/</p>

<h2>Change default OpenVPN Admin Password</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; passwd 'admin user set in user-data'</span></code></pre></td></tr></table></div></figure>


<h2>Add a new VPN user</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; useradd sandor
</span><span class='line'>spudBud@pineApplez&gt; passwd sandor</span></code></pre></td></tr></table></div></figure>


<p>Login with new user account to web to download client config files.</p>

<p><a href="https://">https://</a>&ldquo;aws public ip&rdquo;:943/</p>

<h2>Configure VPN client</h2>

<ul>
<li>MacBook &ndash; <a href="http://sandorsscribbl.es/vpn-setup-macbook-to-openvpn-server-using-tunnelblick/">sandorsscribbl.es/vpn-setup-macbook-to-openvpn-server-using-tunnelblick</a></li>
<li>Fedora  &ndash; <a href="http://sandorsscribbl.es/vpn-setup-fedora-to-openvpn-server/">sandorsscribbl.es/vpn-setup-fedora-to-openvpn-server</a></li>
</ul>


<h2>The result</h2>

<p>A running OpenVPN Server that you can connect a MacBook or Linux box too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add WebProxy Cert to Fedora]]></title>
    <link href="http://e30chris.github.io/add-webproxy-cert-to-fedora/"/>
    <updated>2013-11-29T15:19:00-08:00</updated>
    <id>http://e30chris.github.io/add-webproxy-cert-to-fedora</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Make Fedora work behind a restrictive idiotic corporate web proxy</li>
<li>Install a corporate cert to make that happen</li>
</ul>


<!-- more -->


<h2>Get the cert</h2>

<h2>Install the cert</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; openssl x509 -text -in /path/to/proxycert.crt &gt;&gt; /etc/pki/tls/certs/ca-bundle.crt</span></code></pre></td></tr></table></div></figure>


<h2>The result</h2>

<p>Your corporate overlord has now man in the middled your personal gmail, have fun.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Twitter Timeline to OctoPress Sidebar]]></title>
    <link href="http://e30chris.github.io/add-twitter-timeline-to-octopress-sidebar/"/>
    <updated>2013-11-26T17:20:00-08:00</updated>
    <id>http://e30chris.github.io/add-twitter-timeline-to-octopress-sidebar</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Add a Twitter timeline to the sidebar of an Octopress blog</li>
</ul>


<!-- more -->


<h2>The links</h2>

<p>Octopress &ndash; <a href="http://octopress.org/">link</a></p>

<p>Acqui-hire.me &ndash; <a href="http://acqui-hire.me/blog/2012/11/07/octopress-and-twitter-timelines/">link</a></p>

<h2>Create a Twitter widget</h2>

<p>Goto the Twitter widget settings page <a href="https://twitter.com/settings/widgets">here</a> and create your timeline.</p>

<h2>Twitter Aside</h2>

<p>Add a twitter html page to <code>source/_include/custom/asides</code></p>

<div><script src='https://gist.github.com/7669257.js'></script>
<noscript><pre><code>{% if site.twitter_user and site.twitter_widget_id %}
&lt;section&gt;
  &lt;h1&gt;Latest Tweets&lt;/h1&gt;
  &lt;p&gt;&lt;a class=&quot;twitter-timeline&quot; href=&quot;https://twitter.com/{{site.twitter_user}}&quot; data-widget-id=&quot;{{site.twitter_widget_id}}&quot;&gt;Tweets by @{{ site.twitter_user }}&lt;/a&gt;&lt;/p&gt;
  &lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/section&gt;
{% endif %}</code></pre></noscript></div>


<p>Add that aside in your _config.yml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># list each of the sidebar modules you want to include, in the order you want them to appear.
</span><span class='line'># To add custom asides, create files in /source/_includes/custom/asides/ and add them to the list like 'custom/asides/custom_aside_name.html'
</span><span class='line'>default_asides: [asides/recent_posts.html, asides/category_list.html, asides/twitter.html, asides/github.html, asides/googleplus.html]</span></code></pre></td></tr></table></div></figure>


<p>and update the Twitter settings</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Twitter Embed Timeline
</span><span class='line'>twitter_user: tweety_username
</span><span class='line'>twitter_widget_id: widget_id_from_twitter_widget_code_blob
</span><span class='line'>twitter_tweet_button: true</span></code></pre></td></tr></table></div></figure>


<h2>rake generate | deploy</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; rake generate
</span><span class='line'>spudBud@pineApplez&gt; rake deploy</span></code></pre></td></tr></table></div></figure>


<h2>The results</h2>

<p>You should now have your Twitter timeline embedded on the sidebar of your OctoPress blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Twitter Bootstrap 3 to OctoPress with OctoStrap3]]></title>
    <link href="http://e30chris.github.io/add-twitter-bootstrap-3-to-octopress-with-octostrap3/"/>
    <updated>2013-11-26T16:41:00-08:00</updated>
    <id>http://e30chris.github.io/add-twitter-bootstrap-3-to-octopress-with-octostrap3</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Use awesome Twitter Bootstrap 3 on Octopress</li>
<li>Setup OctoStrap3 to do that</li>
</ul>


<!-- more -->


<h2>The Links</h2>

<p>OctoPress &ndash; <a href="http://octopress.org">link</a></p>

<p>OctoStrap3 &ndash; <a href="http://kaworu.github.io/octopress/">link</a></p>

<h2>Octopress Setup</h2>

<p>Go <a href="http://octopress.org/docs/setup/">here</a> and do all of that</p>

<h2>OctoStrap3 Setup</h2>

<p>Instructions <a href="http://kaworu.github.io/octopress/setup/install/">here</a></p>

<p>From the base OctoPress dir</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; git clone https://github.com/kAworu/octostrap3 .themes/octostrap3
</span><span class='line'>spudBud@pineApplez&gt; rake "install[octostrap3]"
</span></code></pre></td></tr></table></div></figure>


<h2>Category List Aside</h2>

<p>Add a category list html page to <code>source/_includes/custom/asides</code></p>

<div><script src='https://gist.github.com/7669102.js'></script>
<noscript><pre><code>&lt;section class=&quot;panel panel-default&quot;&gt;
  &lt;div class=&quot;panel-heading&quot;&gt;
    &lt;h3 class=&quot;panel-title&quot;&gt;Categories&lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class=&quot;list-group&quot;&gt;
    {% for category in site.categories %}
    {% capture category_url %}{{ site.category_dir }}/{{ category | first | slugize | downcase | replace:&#39; &#39;,&#39;-&#39; | append:&#39;/index.html&#39;}}{% endcapture %}
    &lt;a class=&quot;list-group-item {% if category_url == page.url %}active{% endif %}&quot; href=&quot;{{ root_url | append:&#39;/&#39; | append:category_url }}&quot;&gt;
        &lt;span class=&quot;badge&quot;&gt;{{ category | last | size }}&lt;/span&gt;
        {{ category | first }}
      &lt;/a&gt;
    {% endfor %}
  &lt;/div&gt;
&lt;/section&gt;</code></pre></noscript></div>


<p>Add the new aside in the _config.yml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># list each of the sidebar modules you want to include, in the order you want them to appear.
</span><span class='line'># To add custom asides, create files in /source/_includes/custom/asides/ and add them to the list like 'custom/asides/custom_aside_name.html'
</span><span class='line'>default_asides: [asides/recent_posts.html, asides/category_list.html, asides/twitter.html, asides/github.html, asides/googleplus.html]</span></code></pre></td></tr></table></div></figure>


<h2>rake generate | deploy</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; rake generate
</span><span class='line'>spudBud@pineApplez&gt; rake deploy</span></code></pre></td></tr></table></div></figure>


<p>You should now have a Twitter Bootstrapped UI on your OctoPress blog.  You should also have an aside that list each category, the number of posts for each and have a highlight if you are on that categories page.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[post to octopress and deploy to github pages]]></title>
    <link href="http://e30chris.github.io/post-to-octopress-and-deploy-to-github-pages/"/>
    <updated>2013-11-12T21:06:00-08:00</updated>
    <id>http://e30chris.github.io/post-to-octopress-and-deploy-to-github-pages</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<p>Use Jekyll &amp; octopress to post to Sandors Systems Scribbles which is hosted on GitHub Pages (where you are <a href="http://sandorsscribbl.es/post-to-octopress-and-deploy-to-github-pages/">now</a></p>

<!-- more -->


<h2>The Links</h2>

<ul>
<li><p>Jekyll &ndash; <a href="http://jekyllrb.com/">link</a></p></li>
<li><p>OctoPress &ndash; <a href="http://octopress.org">link</a></p></li>
<li><p>GitHub Pages &ndash; <a href="http://pages.github.com">link</a></p></li>
</ul>


<h2>Create a new post</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pineApplez&gt;e30chris.github.io $rake new_post
</span><span class='line'>Enter a title for your post: post to octopress and deploy to github pages
</span><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2013-11-12-post-to-octopress-and-deploy-to-github-pages.markdown</span></code></pre></td></tr></table></div></figure>


<p>Write the post in markdown, save it.  <a href="http://mouapp.com/">Mou</a> is a nice markdown editor for OS X.</p>

<h2>Generate new blog</h2>

<p>This throws away everything and recreates the static files from scratch.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pineApplez&gt;e30chris.github.io $rake -v generate
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>identical source/stylesheets/screen.css
</span><span class='line'>Configuration from /Users/Sandors/Codestuff/e30chris.github.io/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>Successfully generated site: source -&gt; public</span></code></pre></td></tr></table></div></figure>


<h2>Deploy new blog</h2>

<p>This does a bunch of stuff to move the new blog content in the &lsquo;source&rsquo; branch to the &lsquo;master&rsquo; branch on GitHub which then updates the GitHub Pages content.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pineApplez&gt;e30chris.github.io $rake -v deploy
</span><span class='line'>## Deploying branch to Github Pages
</span><span class='line'>## Pulling any updates from Github Pages
</span><span class='line'>cd _deploy
</span><span class='line'>remote: Counting objects: 7, done.
</span><span class='line'>remote: Compressing objects: 100% (3/3), done.
</span><span class='line'>remote: Total 5 (delta 2), reused 5 (delta 2)
</span><span class='line'>Unpacking objects: 100% (5/5), done.
</span><span class='line'>From github.com:e30chris/e30chris.github.io
</span><span class='line'>   d6ed173..281b573  source     -&gt; origin/source
</span><span class='line'>There is no tracking information for the current branch.
</span><span class='line'>Please specify which branch you want to merge with.
</span><span class='line'>See git-pull(1) for details
</span><span class='line'>
</span><span class='line'>    git pull &lt;remote&gt; &lt;branch&gt;
</span><span class='line'>
</span><span class='line'>If you wish to set tracking information for this branch you can do so with:
</span><span class='line'>
</span><span class='line'>    git branch --set-upstream master origin/&lt;branch&gt;
</span><span class='line'>
</span><span class='line'>cd -
</span><span class='line'>rm -rf _deploy/CNAME
</span><span class='line'>rm -rf _deploy/assets
</span><span class='line'>rm -rf _deploy/atom.xml
</span><span class='line'>rm -rf _deploy/blog
</span><span class='line'>rm -rf _deploy/categories
</span><span class='line'>rm -rf _deploy/favicon.png
</span><span class='line'>rm -rf _deploy/images
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>rm -rf _deploy/javascripts
</span><span class='line'>rm -rf _deploy/robots.txt
</span><span class='line'>rm -rf _deploy/sitemap.xml
</span><span class='line'>rm -rf _deploy/stylesheets
</span><span class='line'>rm -rf _deploy/vanilla-vagrant-setup
</span><span class='line'>
</span><span class='line'>## Copying public to _deploy
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>
</span><span class='line'>## Commiting: Site updated at 2013-11-13 05:02:52 UTC
</span><span class='line'>[master 3df53cc] Site updated at 2013-11-13 05:02:52 UTC
</span><span class='line'> 8 files changed, 484 insertions(+), 8 deletions(-)
</span><span class='line'> create mode 100644 auto-update-virtualbox-guest-additions-with-vagrant-vbguest/index.html
</span><span class='line'>
</span><span class='line'>## Pushing generated _deploy website
</span><span class='line'>Counting objects: 29, done.
</span><span class='line'>Delta compression using up to 2 threads.
</span><span class='line'>Compressing objects: 100% (11/11), done.
</span><span class='line'>Writing objects: 100% (16/16), 5.66 KiB, done.
</span><span class='line'>Total 16 (delta 8), reused 0 (delta 0)
</span><span class='line'>To git@github.com:e30chris/e30chris.github.io.git
</span><span class='line'>   02467a6..3df53cc  master -&gt; master
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -</span></code></pre></td></tr></table></div></figure>


<h3>Commit the new post</h3>

<p>Now that the code is up on GitHub save it in the git repo.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pineApplez&gt;e30chris.github.io $git add .
</span><span class='line'>pineApplez&gt;e30chris.github.io $git commit -m 'post - post to octopress and deploy to github pages'
</span><span class='line'>[source e200e58] post - post to octopress and deploy to github pages
</span><span class='line'> 1 file changed, 52 insertions(+)
</span><span class='line'> create mode 100644 source/_posts/2013-11-12-post-to-octopress-and-deploy-to-github-pages.markdown
</span><span class='line'>pineApplez&gt;e30chris.github.io $git push origin source</span></code></pre></td></tr></table></div></figure>


<p>Now write more scribbles and make the nerd world even more lazyier.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[puppet vim setup]]></title>
    <link href="http://e30chris.github.io/puppet-vim-setup/"/>
    <updated>2013-11-12T21:04:00-08:00</updated>
    <id>http://e30chris.github.io/puppet-vim-setup</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<p>Setup vim to edit Puppet Manifests using a few good tools that will get you to pass Puppet Lint tests.</p>

<!-- more -->


<h2>The Links</h2>

<ul>
<li><p>PuppetLabs &ndash; <a href="http://puppetlabs.com/">link</a></p></li>
<li><p>vim-puppet &ndash; <a href="https://github.com/rodjek/vim-puppet">link</a></p></li>
<li><p>vim tabular &ndash; <a href="https://github.com/godlygeek/tabular">link</a></p></li>
<li><p>vim syntastic &ndash; <a href="https://github.com/scrooloose/syntastic">link</a></p></li>
</ul>


<h2>Vim-Pathogen</h2>

<p>Vim-Pathogen on <a href="https://github.com/tpope/vim-pathogen" title="vim-pathogen">github</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Argon ~]# mkdir -p ~/.vim/autoload ~/.vim/bundle
</span><span class='line'>[root@Argon ~]# cd ~/.vim/autoload
</span><span class='line'>[root@Argon ~]# curl -o pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim</span></code></pre></td></tr></table></div></figure>


<p>Add these settings to .vimrc</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>execute pathogen#infect()
</span><span class='line'>syntax on
</span><span class='line'>filetype plugin indent on</span></code></pre></td></tr></table></div></figure>


<h2>Vim-Puppet</h2>

<p>Vim-Puppet on <a href="https://github.com/rodjek/vim-puppet" title="vim-puppet">github</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Argon ~]# cd ~/.vim/bundle
</span><span class='line'>[root@Argon ~]# git clone git://github.com/rodjek/vim-puppet.git</span></code></pre></td></tr></table></div></figure>


<h2>Tabular</h2>

<p>Tabular on <a href="https://github.com/godlygeek/tabular" title="tabular">github</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Argon ~]# cd ~/.vim/bundle
</span><span class='line'>[root@Argon ~]# git clone git://github.com/godlygeek/tabular.git</span></code></pre></td></tr></table></div></figure>


<h2>Syntastic</h2>

<p>Syntastic on <a href="https://github.com/scrooloose/syntastic" title="syntastic">github</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Argon ~]# cd ~/.vim/bundle
</span><span class='line'>[root@Argon ~]# git clone https://github.com/scrooloose/syntastic.git</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto Update VirtualBox Guest Additions with vagrant-vbguest]]></title>
    <link href="http://e30chris.github.io/auto-update-virtualbox-guest-additions-with-vagrant-vbguest/"/>
    <updated>2013-11-12T21:01:00-08:00</updated>
    <id>http://e30chris.github.io/auto-update-virtualbox-guest-additions-with-vagrant-vbguest</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Keep the VirtualBox guest additions at the latest version using vagrant-vbguest built by dotless-de.</li>
</ul>


<!-- more -->


<h2>The Links</h2>

<ul>
<li><p>Vagrant &ndash; <a href="http://www.vagrantup.com/">link</a></p></li>
<li><p>Vagrant vbguest &ndash; <a href="https://github.com/dotless-de/vagrant-vbguest">link</a></p></li>
<li><p>dotless-de &ndash; <a href="https://github.com/dotless-de">link</a></p></li>
</ul>


<h2>vagrant-vbguest</h2>

<p>A beautifully simple Vagrant plugin to manage the guest additions on VirtualBox.</p>

<h2>install</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/PuppetMaster $vagrant plugin install vagrant-vbguest</span></code></pre></td></tr></table></div></figure>


<h2>bootup usage</h2>

<p>vagrant-vbguest will run on every <code>vagrant up</code> or on a <code>vagrant reload</code> unless you specifically tell it not to.</p>

<h2>running VM usage</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; vagrant vbguest --status</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vanilla vagrant setup]]></title>
    <link href="http://e30chris.github.io/vanilla-vagrant-setup/"/>
    <updated>2013-11-12T20:57:00-08:00</updated>
    <id>http://e30chris.github.io/vanilla-vagrant-setup</id>
    <content type="html"><![CDATA[<h2>The Goal</h2>

<ul>
<li>Setup Vagrant</li>
<li>Start a Vanilla Ubuntu box</li>
</ul>


<!-- more -->


<h2>The Links</h2>

<ul>
<li>Vagrant &ndash; <a href="http://www.vagrantup.com/">link</a></li>
</ul>


<h2>Vagrant Setup</h2>

<h3>Grab the latest <a href="http://downloads.vagrantup.com/">here</a></h3>

<h3>Install it</h3>

<h3>Thats it</h3>

<h2>Adding Boxes</h2>

<p>When you add a box to your local puter it downloads the VM image to your home dir like so:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box add name url</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; vagrant box add precise32 http://files.vagrantup.com/precise32.box</span></code></pre></td></tr></table></div></figure>


<p>This downloads the VM image into the /boxes dir:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/PuppetMaster $la ~/.vagrant.d/boxes/
</span><span class='line'>total 
</span><span class='line'>drwxr-xr-x  7 spudBud  staff   238B Aug 27 17:38 ./
</span><span class='line'>drwxr-xr-x  7 spudBud  staff   340B Aug 14 16:46 ../
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Aug 27 17:38 centos6min/
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Aug 27 15:51 lucid32/
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Aug 27 16:12 precise32/
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Jun 13 16:33 raring/
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Jul  8 11:15 ubuntu/</span></code></pre></td></tr></table></div></figure>


<p>With each box dir looking like so:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/PuppetMaster $la ~/.vagrant.d/boxes/centos6min/virtualbox/
</span><span class='line'>total 742368
</span><span class='line'>drwxr-xr-x  2 spudBud  staff   238B Aug 27 17:38 ./
</span><span class='line'>drwxr-xr-x  3 spudBud  staff   102B Aug 27 17:38 ../
</span><span class='line'>-rw-r--r--  1 spudBud  staff   505B Aug 27 17:37 Vagrantfile
</span><span class='line'>-rw-------  1 spudBud  staff   362M Aug 27 17:38 box-disk1.vmdk
</span><span class='line'>-rw-------  1 spudBud  staff   121B Aug 27 17:37 box.mf
</span><span class='line'>-rw-------  1 spudBud  staff    13K Aug 27 17:38 box.ovf
</span><span class='line'>-rw-r--r--  1 spudBud  staff    25B Aug 27 17:38 metadata.json</span></code></pre></td></tr></table></div></figure>


<p>Once you download a box the base image stays in this directory even if you destroy the VM you create.  The only way to completely remove a box from your puter (and remove it totally from the ~/.vagrant.d/boxes dir) is by running</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; vagrant box remove precise64 virtualbox</span></code></pre></td></tr></table></div></figure>


<p>The two arguments are the logical name of the box and the provider of the box.</p>

<h2>Vanilla Vagrant</h2>

<p>Start a vanilla Ubuntu like so:</p>

<h3>Download the Box</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants $vagrant box add precise32 http://files.vagrantup.com/precise32.box</span></code></pre></td></tr></table></div></figure>


<h3>Create the dir</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants $mkdir precise32 && cd precise32</span></code></pre></td></tr></table></div></figure>


<h3>Create the Vagrantfile</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/precise32 $vim Vagrantfile</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Vagrant.configure("2") do |config|
</span><span class='line'>  config.vm.box = "precise32"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>This creates a basic Vagrantfile to start up a machine.  If you use &lsquo;vagrant init&rsquo; you get a really long file with a bunch of crap you don&rsquo;t need to read that does what this does.  KISS!</p>

<h3>Start the VM</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/precise32 $vagrant up</span></code></pre></td></tr></table></div></figure>


<h3>Login</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>spudBud@pineApplez&gt; ~/Codestuff/vagrants/precise32 $vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>You are now logged into a Vanilla Vagrant box.</p>
]]></content>
  </entry>
  
</feed>
